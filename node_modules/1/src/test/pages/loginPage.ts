// loginPage.ts
import { Page, Locator, expect } from '@playwright/test';
import dotenv from 'dotenv'; 
dotenv.config(); 
export default class LoginPage {

    readonly page: Page;
    readonly usernameLocator: Locator;
    readonly passwordLocator: Locator;
    readonly loginButtonLocator: Locator;
    readonly errorMessageLocator: Locator; // Add locator for error message

    constructor(page: Page) {
        this.page = page;
        this.usernameLocator = page.locator("#user-name");
        this.passwordLocator = page.locator("#password");
        this.loginButtonLocator = page.locator("#login-button");
        this.errorMessageLocator = page.locator('[data-test="error"]'); // Example locator
    }

    async visit() {
        await this.page.goto(`${process.env.WEB_URL}`); 
    }

    async login(username: string, password: string) {
        await this.usernameLocator.fill(username);
        await this.passwordLocator.fill(password);
        await this.loginButtonLocator.click();
    }

    async validateErrorMessage(expectedMessage: string) { 
        await expect(this.errorMessageLocator).toHaveText(expectedMessage);
    }
}